Week 5 Report:
I implemented my week 4 ideas for storing and loading the network parameters.
I ran a simple test (a linear y=mx+b function) using loaded slope and bias from an asset file I created in Python using the same file-writing and float-to-short code as I am using in the entire-network parameter-saving code, and it worked.
This week, I have fixed some issues. One was with the code's asset and resource references being null, which I fixed by passing the app's context to the methods where said assets are loaded/used; another was using Integer.getInteger(string), which gets filesystem parameters, instead of using Integer.parseInt(string) as I should have to get the integer represented by a string; and there were (and probably still are) many other small bugs. The other major problem I had was that my model-to-layer code had a mistake in it, that caused data to be saved in the wrong order and restricted the matrix to a square. I fixed the error and regenerated the layer files (I should note that converting the model data to layer data is about a minute-long process, which is not bad).
Now I am getting results from the app; I've included a screen capture in this commit. There is a bug causing the network to classify everything as definitely a midge; my task for the next few weeks will be to hunt down such bugs until the app performs satisfactorily.
